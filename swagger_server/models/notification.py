# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Notification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, known: bool=None, name: str=None):  # noqa: E501
        """Notification - a model defined in Swagger

        :param known: The known of this Notification.  # noqa: E501
        :type known: bool
        :param name: The name of this Notification.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'known': bool,
            'name': str
        }

        self.attribute_map = {
            'known': 'known',
            'name': 'name'
        }
        self._known = known
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'Notification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Notification of this Notification.  # noqa: E501
        :rtype: Notification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def known(self) -> bool:
        """Gets the known of this Notification.


        :return: The known of this Notification.
        :rtype: bool
        """
        return self._known

    @known.setter
    def known(self, known: bool):
        """Sets the known of this Notification.


        :param known: The known of this Notification.
        :type known: bool
        """

        self._known = known

    @property
    def name(self) -> str:
        """Gets the name of this Notification.


        :return: The name of this Notification.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Notification.


        :param name: The name of this Notification.
        :type name: str
        """

        self._name = name
